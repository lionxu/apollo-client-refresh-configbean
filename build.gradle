buildscript {
    ext {
        springBootVersion = '3.2.1'
    }
    repositories {
        mavenLocal()

        def A_LI_YUN_REPOSITORY_URL = 'https://maven.aliyun.com/repository/public/'
        def A_LI_YUN_JCENTER_URL = 'https://maven.aliyun.com/repository/jcenter/'
        def A_LI_YUN_GOOGLE_URL = 'https://maven.aliyun.com/repository/google/'
        def A_LI_YUN_GRADLE_PLUGIN_URL = 'https://maven.aliyun.com/repository/gradle-plugin/'

        maven { url A_LI_YUN_REPOSITORY_URL }
        maven { url A_LI_YUN_JCENTER_URL }
        maven { url A_LI_YUN_GOOGLE_URL }
        maven { url A_LI_YUN_GRADLE_PLUGIN_URL }

        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

group 'com.github.selfancy'
version '1.0.0-RELEASE'

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

repositories {
    mavenLocal()
    def A_LI_YUN_REPOSITORY_URL = 'https://maven.aliyun.com/repository/public/'
    def A_LI_YUN_JCENTER_URL = 'https://maven.aliyun.com/repository/jcenter/'
    def A_LI_YUN_GOOGLE_URL = 'https://maven.aliyun.com/repository/google/'
    def A_LI_YUN_GRADLE_PLUGIN_URL = 'https://maven.aliyun.com/repository/gradle-plugin/'

    maven { url A_LI_YUN_REPOSITORY_URL }
    maven { url A_LI_YUN_JCENTER_URL }
    maven { url A_LI_YUN_GOOGLE_URL }
    maven { url A_LI_YUN_GRADLE_PLUGIN_URL }

    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-autoconfigure'
    implementation 'com.ctrip.framework.apollo:apollo-client:1.3.0'
}

bootJar.enabled = false
jar.enabled = true

def file = new File(System.getProperty("user.home") + "/code/publish/publish.gradle")
if (file.exists()) {
    apply from:  file.absolutePath
}